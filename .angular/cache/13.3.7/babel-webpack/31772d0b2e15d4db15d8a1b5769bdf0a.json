{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(_http) {\n      this._http = _http;\n    }\n\n    getUserData() {\n      throw new Error('Method not implemented.');\n    }\n\n    setMessage(data) {\n      this.message = data;\n    }\n\n    getMessage() {\n      return this.message;\n    } // now here i will define the POST,GET,PUT,DELETE \n    // Create Restaurant uisng Post Method\n\n\n    postRestaurant(data) {\n      return this._http.post(\"http://localhost:3000/posts\", data).pipe(map(res => {\n        return res;\n      }));\n    } // Create Restaurant uisng Get Method\n\n\n    getRestuarant() {\n      return this._http.get(\"http://localhost:3000/posts\").pipe(map(res => {\n        return res;\n      }));\n    } //Update\n\n\n    updateRestuarant(data, id) {\n      return this._http.put(\"http://localhost:3000/posts/\" + id, data).pipe(map(res => {\n        return res;\n      }));\n    } //Delete\n\n\n    DeleteRestuarant(id) {\n      return this._http.delete(\"http://localhost:3000/posts/\" + id).pipe(map(res => {\n        return res;\n      }));\n    }\n\n    getUserdata() {\n      return this._http.get(\"http://localhost:3000/signup\").pipe(map(res => {\n        return res;\n      }));\n    } //Update\n\n\n    updateUserData(data, id) {\n      return this._http.put(\"http://localhost:3000/signup/\" + id, data).pipe(map(res => {\n        //console.log(res);\n        return res;\n      }));\n    }\n\n    postUserProfile(data) {\n      return this._http.post(\"http://localhost:3000/signup\", data).pipe(map(res => {\n        return res;\n      }));\n    }\n\n    getUnProfile(id) {\n      return this._http.get(\"http://localhost:3000/signup/\" + id).pipe(map(res => {\n        return res;\n      }));\n    }\n\n    getProfileID(id) {\n      return this._http.get(\"http://localhost:3000/signup/\" + id).pipe(map(res => {\n        return res;\n      }));\n    }\n\n  }\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}